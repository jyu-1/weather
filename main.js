(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),c=t(667),A=t.n(c),s=new URL(t(194),t.b),d=i()(o());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito+Sans&display=swap);"]);var u=A()(s);d.push([n.id,'* {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: "Nunito Sans", sans-serif;\n    background-image: url('+u+");\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-color: rgb(215, 147, 255);\n    background-attachment: fixed;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n\n/* Header */\nheader {\n    flex: 0 0 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n}\n\nheader input {\n    flex: 1 1 auto;\n    height: 40px;\n    min-width: 200px;\n    max-width: 500px;\n    text-align: center;\n    border: none;\n    border-radius: 5px;\n}\n\n#change-unit {\n    border: none;\n    background-color: white;\n    height: 40px;\n    width: 40px;\n    border-radius: 5px;\n}\n\n#change-unit:hover {\n    cursor: pointer;\n    background-color: rgb(201, 201, 201);\n}\n\n#change-unit:active {\n    background-color: rgb(143, 143, 143);\n}\n\n/* Main Body */\n.container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex: 1;\n}\n\n.icon {\n    height: 100px;\n    width: 100px;\n}\n\n.city,\n.current-day {\n    font-size: 2rem;\n    font-weight: bold;\n}\n\n.current-temp {\n    font-size: 3rem;\n    font-weight: bold;\n}\n\n.current-day,\n.city,\n.current-temp,\n.feels,\n.condition,\n.sunrise,\n.sunset,\n.humidity,\n.pressure {\n    color: white;\n}\n\n.current-weather {\n    background-color: rgba(0, 0, 0, 0.7);\n    padding: 30px;\n    margin-bottom: 30px;\n    text-align: center;\n    width: 400px;\n    border-radius: 5px;\n}\n\n.current-weather-extra {\n    background-color: rgba(0, 0, 0, 0.7);\n    padding: 30px;\n    margin-bottom: 30px;\n    text-align: center;\n    width: 400px;\n    border-radius: 5px;\n}\n\n/* Forecast */\n.forecast {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    background-color: rgba(0, 0, 0, 0.7);\n    padding: 30px;\n    text-align: center;\n    width: 600px;\n    border-radius: 5px;\n    gap: 5px;\n}\n\n.forecast div {\n    flex: 0 0 100px;\n    color: white;\n}\n\n/* Footer */\nfooter {\n    flex: 0 0 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\nfooter span {\n    flex-shrink: 1;\n    color: white;\n}\n\nfooter a {\n    color: white;\n}\n\n@media screen and (max-width: 480px) {\n    header input {\n        max-width: 300px;\n    }\n\n    header {\n        flex: 0 0 60px;\n        gap: 5px;\n    }\n\n    .current-weather {\n        width: 300px;\n        padding: 20px;\n        margin-bottom: 10px;\n    }\n\n    .current-weather-extra {\n        width: 300px;\n        padding: 20px;\n        margin-bottom: 10px;\n    }\n\n    .forecast {\n        width: 300px;\n        padding: 20px;\n    }\n}\n\n::-webkit-scrollbar {\n    height: 10px;\n}\n\n::-webkit-scrollbar-track {\n    background: none;\n}\n\n::-webkit-scrollbar-thumb {\n    background: rgb(193, 58, 255);\n}\n\n::-webkit-scrollbar-thumb:hover {\n    background: rgb(213, 122, 255);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,WAAW;IACX,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,sCAAsC;IACtC,yDAAyC;IACzC,sBAAsB;IACtB,4BAA4B;IAC5B,kCAAkC;IAClC,oCAAoC;IACpC,4BAA4B;IAC5B,aAAa;IACb,sBAAsB;IACtB,iBAAiB;AACrB;;AAEA,WAAW;AACX;IACI,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;IAChB,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,YAAY;IACZ,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,oCAAoC;AACxC;;AAEA;IACI,oCAAoC;AACxC;;AAEA,cAAc;AACd;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,OAAO;AACX;;AAEA;IACI,aAAa;IACb,YAAY;AAChB;;AAEA;;IAEI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;;;;;;;;;IASI,YAAY;AAChB;;AAEA;IACI,oCAAoC;IACpC,aAAa;IACb,mBAAmB;IACnB,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,oCAAoC;IACpC,aAAa;IACb,mBAAmB;IACnB,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;AACtB;;AAEA,aAAa;AACb;IACI,aAAa;IACb,iBAAiB;IACjB,gBAAgB;IAChB,oCAAoC;IACpC,aAAa;IACb,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;IAClB,QAAQ;AACZ;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA,WAAW;AACX;IACI,cAAc;IACd,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI;QACI,gBAAgB;IACpB;;IAEA;QACI,cAAc;QACd,QAAQ;IACZ;;IAEA;QACI,YAAY;QACZ,aAAa;QACb,mBAAmB;IACvB;;IAEA;QACI,YAAY;QACZ,aAAa;QACb,mBAAmB;IACvB;;IAEA;QACI,YAAY;QACZ,aAAa;IACjB;AACJ;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,8BAA8B;AAClC",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Nunito+Sans&display=swap");\n\n* {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: "Nunito Sans", sans-serif;\n    background-image: url(./assets/rainy.gif);\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-color: rgb(215, 147, 255);\n    background-attachment: fixed;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n\n/* Header */\nheader {\n    flex: 0 0 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n}\n\nheader input {\n    flex: 1 1 auto;\n    height: 40px;\n    min-width: 200px;\n    max-width: 500px;\n    text-align: center;\n    border: none;\n    border-radius: 5px;\n}\n\n#change-unit {\n    border: none;\n    background-color: white;\n    height: 40px;\n    width: 40px;\n    border-radius: 5px;\n}\n\n#change-unit:hover {\n    cursor: pointer;\n    background-color: rgb(201, 201, 201);\n}\n\n#change-unit:active {\n    background-color: rgb(143, 143, 143);\n}\n\n/* Main Body */\n.container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex: 1;\n}\n\n.icon {\n    height: 100px;\n    width: 100px;\n}\n\n.city,\n.current-day {\n    font-size: 2rem;\n    font-weight: bold;\n}\n\n.current-temp {\n    font-size: 3rem;\n    font-weight: bold;\n}\n\n.current-day,\n.city,\n.current-temp,\n.feels,\n.condition,\n.sunrise,\n.sunset,\n.humidity,\n.pressure {\n    color: white;\n}\n\n.current-weather {\n    background-color: rgba(0, 0, 0, 0.7);\n    padding: 30px;\n    margin-bottom: 30px;\n    text-align: center;\n    width: 400px;\n    border-radius: 5px;\n}\n\n.current-weather-extra {\n    background-color: rgba(0, 0, 0, 0.7);\n    padding: 30px;\n    margin-bottom: 30px;\n    text-align: center;\n    width: 400px;\n    border-radius: 5px;\n}\n\n/* Forecast */\n.forecast {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    background-color: rgba(0, 0, 0, 0.7);\n    padding: 30px;\n    text-align: center;\n    width: 600px;\n    border-radius: 5px;\n    gap: 5px;\n}\n\n.forecast div {\n    flex: 0 0 100px;\n    color: white;\n}\n\n/* Footer */\nfooter {\n    flex: 0 0 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\nfooter span {\n    flex-shrink: 1;\n    color: white;\n}\n\nfooter a {\n    color: white;\n}\n\n@media screen and (max-width: 480px) {\n    header input {\n        max-width: 300px;\n    }\n\n    header {\n        flex: 0 0 60px;\n        gap: 5px;\n    }\n\n    .current-weather {\n        width: 300px;\n        padding: 20px;\n        margin-bottom: 10px;\n    }\n\n    .current-weather-extra {\n        width: 300px;\n        padding: 20px;\n        margin-bottom: 10px;\n    }\n\n    .forecast {\n        width: 300px;\n        padding: 20px;\n    }\n}\n\n::-webkit-scrollbar {\n    height: 10px;\n}\n\n::-webkit-scrollbar-track {\n    background: none;\n}\n\n::-webkit-scrollbar-thumb {\n    background: rgb(193, 58, 255);\n}\n\n::-webkit-scrollbar-thumb:hover {\n    background: rgb(213, 122, 255);\n}\n'],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],s=r.base?A[0]+r.base:A[0],d=a[s]||0,u="".concat(s," ").concat(d);a[s]=d+1;var p=t(u),l={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(l);else{var m=o(l,r);r.byIndex=c,e.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var A=r(n,o),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},194:(n,e,t)=>{n.exports=t.p+"images/0ee44efa85190dcdb9b0..gif"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),A=t.n(c),s=t(216),d=t.n(s),u=t(589),p=t.n(u),l=t(426),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),e()(l.Z,m),l.Z&&l.Z.locals&&l.Z.locals;const h={unit:"imperial",symbol:"F",current_time:0,location:"los angeles",current_temp:0,feels_like:0,condition:"",sunrise:0,sunset:0,humidity:0,pressure:0,timezone:0,icon:"",forecast:[]};function g(n){switch(new Date(1e3*n).getDay()){case 0:return"Sunday";case 1:return"Monday";case 2:return"Tuesday";case 3:return"Wednesday";case 4:return"Thursday";case 5:return"Friday";case 6:return"Saturday";default:return"Error"}}function f(n){const e=new Date(1e3*n);return e.getHours()<12?`${String(e.getHours()).padStart(2,"0")}:${String(e.getMinutes()).padStart(2,"0")} AM`:`${String(e.getHours()%12||12).padStart(2,"0")}:${String(e.getMinutes()).padStart(2,"0")} PM`}async function C(){try{const t=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${h.location}&APPID=95533261ec1e43d4a7f6f93a6b7dacfe&units=${h.unit}`,{mode:"cors"}),r=await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${h.location}&APPID=95533261ec1e43d4a7f6f93a6b7dacfe&units=${h.unit}`,{mode:"cors"});if(200===t.status){const o=await t.json(),a=await r.json();n=o,e=a,h.current_time=n.dt,h.location=n.name,h.current_temp=n.main.temp,h.feels_like=n.main.feels_like,h.condition=n.weather[0].main,h.sunrise=n.sys.sunrise,h.sunset=n.sys.sunset,h.humidity=n.main.humidity,h.pressure=n.main.pressure,h.timezone=n.timezone,h.icon=n.weather[0].icon,h.forecast=e.list,function(){const n=document.querySelector(".current-day"),e=document.querySelector(".icon"),t=document.querySelector(".city"),r=document.querySelector(".current-temp"),o=document.querySelector(".feels"),a=document.querySelector(".condition"),i=document.querySelector(".sunrise"),c=document.querySelector(".sunset"),A=document.querySelector(".humidity"),s=document.querySelector(".pressure");n.textContent=g(h.current_time),e.src=`http://openweathermap.org/img/wn/${h.icon}@2x.png`,t.textContent=h.location,r.textContent=`${Math.round(h.current_temp)}° ${h.symbol}`,o.textContent=`Feels like ${Math.round(h.feels_like)} ${h.symbol}`,a.textContent=h.condition,i.textContent=`Sunrise: ${f(h.sunrise)}`,c.textContent=`Sunset: ${f(h.sunset)}`,A.textContent=`Humidity: ${h.humidity}%`,s.textContent=`Pressure: ${h.pressure} hPA`,function(){const n=document.querySelector(".forecast");n.textContent="",h.forecast.forEach((e=>{const t=document.createElement("div"),r=document.createElement("div"),o=document.createElement("img"),a=document.createElement("div"),i=document.createElement("div"),c=document.createElement("div");r.classList.add("day"),o.classList.add("forecast-icon"),a.classList.add("date"),i.classList.add("hour"),c.classList.add("temp"),r.textContent=`${g(e.dt)}`,o.src=`http://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`,a.textContent=`${function(n){const e=new Date(1e3*n);return`${e.getMonth()+1}/${e.getDate()}`}(e.dt)}`,i.textContent=f(e.dt),c.textContent=`${Math.round(e.main.temp)}° ${h.symbol} `,t.appendChild(r),t.appendChild(o),t.appendChild(a),t.appendChild(i),t.appendChild(c),n.appendChild(t)}))}()}()}else 404===t.status?alert("City not found"):alert("Bad Request")}catch(n){alert("Failed to get Data")}var n,e}const x=document.querySelector("#search");x.addEventListener("keypress",(n=>{"Enter"===n.key&&(h.location=x.value,C())}));const b=document.querySelector("#change-unit");b.addEventListener("click",(()=>{"imperial"===h.unit?(h.unit="metric",h.symbol="C",b.textContent="°C"):(h.unit="imperial",h.symbol="F",b.textContent="°F"),C()})),C()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,